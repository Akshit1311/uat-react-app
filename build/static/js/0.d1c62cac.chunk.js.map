{"version":3,"sources":["pages/HomePage/ViewInsight.tsx","pages/HomePage/LeftNav/DropDownListComponent.tsx","styles-components/SearchBar.tsx","pages/HomePage/AllSearch.tsx","pages/HomePage/LeftNav/LeftNavComponent.tsx","styles-components/Cards.tsx","styles-components/Badge.tsx"],"names":["ViewInsight","props","query","useWebQuery","history","useHistory","React","id","value","state","setState","selectedState","length","Math","random","className","style","textTransform","colorTheme","onClick","url","viewInsightUrl","get","push","navigate","override","css","SearchWrapper","styled","div","theme","dropDown","searchBackground","searchBorder","color","Input","input","DropDownListComponent","originalData","handleClick","accessor","selectedItem","handleApplyClick","loading","handleClearClick","dropDownId","noSort","useContext","ThemeContext","useState","data","setData","searchQuery","setSearchQuery","tempSelectedItem","setTempSelectedItem","findSelectedState","dataObj","find","item","list","map","index","noData","Boolean","useEffect","sort","a","b","localeCompare","marginTop","type","onChange","changeEvent","changedValue","target","filteredList","filter","toLowerCase","includes","onKeyUp","e","keyCode","prev","document","getElementById","scrollIntoView","behavior","placeholder","size","fontSize","fontFamily","Button","border","cancelBorder","backgroundColor","cancel","cancelColor","noBorder","toString","marginLeft","ThemeColorIdentifier","memo","SearchBarWrapper","colorCards","bgCards","shadowCards","SearchBarInput","sideSearch","SpanIcon","span","Badges","borderRadius","padding","width","fontWeight","transition","active","themeColor","background","NoDataMessage","ScrollableDiv","overflowX","overflowY","cursor","height","display","boxShadow","Hr","TYPES","Selector","label","obj","activeId","findIndex","i","toUpperCase","VeriticallyScrollableDiv","minHeight","maxHeight","SearchBar","searchBarExpanded","actions","filterState","setSearchBarExpanded","setAppliedFilters","handleSectorClick","onApplySector","handleStagesClick","onApplyStages","handleIndustryClick","onApplyIndustry","appliedFilters","searchText","setSearchText","activeFilterType","setActiveFilterType","allTypeDisplayLimit","setAllTypeDisplayLimit","applyState","applyStages","stage","currentStages","stages","splice","array","applySector","sector","currentSectors","sectors","applyIndustry","industry","currentIndustries","industries","states","slice","marginBottom","name","handleTabClick","ResetButton","button","justifyContent","alignItems","resetButton","Accordion","MaterialStyled","disableGutters","elevation","square","palette","divider","mode","borderBottom","paddingLeft","paddingRight","AccordionSummary","expandIcon","sx","flexDirection","paddingBottom","transform","marginRight","margin","AccordionDetails","MuiAccordionDetails","DropDown","LeftNavComponent","setSelectedArea","selectedArea","tagsResources","fetchFilterList","filterLoading","noShadow","insight","searchVisible","search","dateRange","dateRangeState","dateRangeLoading","setSelectedState","handleToggle","setStateViewMode","expanded","setExpanded","selectedSector","setSelectedSector","selectedStages","setSelectedStages","selectedIndustry","setSelectedIndustry","selectedBadges","setSelectedBadges","useQuery","HomePageApi","badges","badgesState","findSelectedIndex","handleStateClick","closeModal","onApplyState","stateIdsForAPiRequest","Array","forEach","prevState","area","stateName","sectorObj","sectorIndex","newSectors","sectorIdsForAPiRequest","stagesIndex","newStages","stagesIdsForApiRequest","industryIndex","newIndustry","handleBadgesClick","badgesIndex","newsBadges","onApplyBadges","badgesIdsForApiRequest","handleChange","panel","event","newExpanded","isResetFilterVisible","position","top","zIndex","MapVariables","newBadgesList","badge","title","trimBadges","Card","showCaseStartUpBorder","Badge","bgBadge","RoundedBadge","hidden"],"mappings":"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","file":"static/js/0.d1c62cac.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useWebQuery } from \"../../hooks/useWebQuery\";\n// import { baseRoute } from \"../../routes/publicRoutes\";\nimport \"../../scss/HomePageStyles/leftNavComponent.scss\";\nimport { Button } from \"../../styles-components/Button\";\nimport { Card } from \"../../styles-components/Cards\";\n\ninterface ViewInsight {\n  viewInsightUrl: string;\n  colorTheme: string;\n}\n\nexport default function ViewInsight(props: any) {\n  const query = useWebQuery();\n  const history = useHistory();\n  const [state, setState] = React.useState<any>({ id: \"\", value: \"\" });\n\n  const navigate = () => {\n    const url =\n      props.selectedState && props.selectedState[0]\n        ? `/maps` + props.viewInsightUrl\n        : `/maps/view-insight?id=${\n            query.get(\"id\") ? query.get(\"id\") : \"India\"\n          }&state=${query.get(\"state\") ? query.get(\"state\") : \"India\"}`;\n    history.push(url);\n  };\n\n  React.useEffect(() => {\n    if (props.selectedState && props.selectedState.length > 0) {\n      let { selectedState } = props;\n      setState(selectedState[0]);\n    }\n  }, [props.selectedState]);\n  let ran = Math.random();\n\n  return (\n    <div className=\"left-side-nav-styles\">\n      <Card className=\"left-nav-bottom-card row pt-3 pb-0\">\n        <h6\n          className=\"px-0 card-heading-left-bottom\"\n          style={{ textTransform: \"uppercase\" }}\n        >\n          {`VIEW STARTUP ECOSYSTEM INSIGHTS OF ${\n            state && state.value != \"\" ? state.value : \"INDIA\"\n          }`}\n        </h6>\n        <span className=\"sub-heading px-0 mb-2 font-500\">\n          You can View Insights of{\" \"}\n          {state && state.value != \"\" ? state.value : \"India\"}\n        </span>\n        <div className=\"btn-view-project mx-0 px-0\">\n          {/* <Link to={url}>\n            <Button colorTheme={props.colorTheme} className=\"background-color-theme\">View Insights</Button>\n          </Link> */}\n          <Button\n            colorTheme={props.colorTheme}\n            onClick={() => navigate()}\n            className=\"background-color-theme\"\n          >\n            View Insights\n          </Button>\n        </div>\n      </Card>\n    </div>\n  );\n}\n","import { css } from \"@emotion/react\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { GoSearch } from \"react-icons/go\";\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport styled from \"styled-components\";\nimport { ThemeContext } from \"../../../config/context\";\nimport { ThemeColorIdentifier } from \"../../../helper-function/themeColor\";\nimport \"../../../scss/HomePageStyles/dropDownListComponent.scss\";\nimport { Button } from \"../../../styles-components/Button\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst SearchWrapper = styled.div`\n  background: ${(props) => props.theme.dropDown.searchBackground} !important;\n  border: 1px solid ${(props) => props.theme.dropDown.searchBorder} !important;\n  color: ${(props) => props.theme.color} !important;\n`;\nconst Input = styled.input`\n  background: ${(props) => props.theme.dropDown.searchBackground} !important;\n  color: ${(props) => props.theme.color} !important;\n`;\n\nconst DropDownListComponent = (props: any) => {\n  let {\n    originalData,\n    accessor,\n    handleClick,\n    selectedItem,\n    handleApplyClick,\n    loading,\n    handleClearClick,\n    dropDownId,\n    noSort,\n    colorTheme,\n  } = props;\n\n  const theme = useContext(ThemeContext);\n\n  const [data, setData] = useState<any>([]);\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [tempSelectedItem, setTempSelectedItem] = useState<number>(-1);\n\n  const findSelectedState = (dataObj: any) =>\n    selectedItem.find((item: any) => item.id === dataObj.id);\n\n  const bgUnSelected = () => {\n    if (theme.theme === \"dark\") return \"unselected-list-card-dark\";\n    if (theme.theme === \"light\") return \"unselected-list-card-light\";\n  };\n\n  const list: any[] = data.map((dataObj: any, index:number) => {\n    return (\n      <div\n        key={dataObj.id}\n        onClick={() => handleClick(dataObj)}\n        id={dataObj.id}\n        className={`list-card me-2 ${\n          findSelectedState(dataObj) ? \"selected-list-card\" : bgUnSelected()\n        } ${tempSelectedItem === index ? \"list-card-color\" : \"\"}`}\n      >\n        <h5 className=\"m-0 p-0\">{dataObj[\"value\"]}</h5>\n      </div>\n    );\n  });\n\n  const noData: boolean = Boolean(data.length === 0 && !loading);\n\n  const onSearch = (changeEvent: any) => {\n    const changedValue: string = changeEvent.target.value;\n    setSearchQuery(changedValue);\n    const filteredList: any[] = originalData.filter((item: any) =>\n      item[\"value\"].toLowerCase().includes(changedValue.toLowerCase())\n    );\n    setData(filteredList);\n  };\n\n  useEffect(() => {\n    if (noSort) {\n      setData(originalData);\n    } else {\n      const sort = originalData.sort((a: any, b: any) =>\n        a.value.localeCompare(b.value)\n      );\n      setData(sort);\n    }\n  }, [originalData.length, loading]);\n\n  const onKeyUp = (e: any) => {\n    const keyCode = e.keyCode;\n\n    if (keyCode === 40) {\n\n      setTempSelectedItem((prev) => {\n        document\n          .getElementById(data[prev === data.length - 1 ? 0 : prev + 1]?.id)\n          ?.scrollIntoView({ behavior: \"smooth\" });\n        return prev === data.length - 1 ? 0 : prev + 1;\n      });\n    }\n    if (keyCode === 38) {\n      setTempSelectedItem((prev) => {\n        document\n        .getElementById(data[prev === 0 ? data.length - 1 : prev - 1]?.id)\n        ?.scrollIntoView({ behavior: \"smooth\" });\n        return (prev === 0 ? data.length - 1 : prev - 1)\n      }\n      \n      );\n    }\n    if (keyCode === 13) {\n      handleClick(data[tempSelectedItem]);\n    }\n  };\n\n  return (\n    <div className=\"drop-down-list-component\">\n      <SearchWrapper\n        className={`state-search-bar me-3`}\n        style={{ marginTop: \"6px\" }}\n      >\n        <div className=\"d-flex\">\n          <span className=\"btn my-0 me-0 pe-0\" style={{ color: theme.color }}>\n            <GoSearch />\n          </span>\n          <Input\n            type=\"text\"\n            value={searchQuery}\n            onChange={onSearch}\n            onKeyUp={onKeyUp}\n            className={`ms-0 form-control me-3 border-0 shadow-none f-400 font-Mont`}\n            placeholder=\"Search\"\n          />\n        </div>\n      </SearchWrapper>\n\n      <div className=\"state-container\">\n        {loading ? (\n          <div className=\"w-100 h-100 d-flex justify-content-center align-items-center\">\n            <MoonLoader\n              color={\"#0177FA\"}\n              loading={loading}\n              size={\"25px\"}\n              css={override}\n            />\n          </div>\n        ) : (\n          <></>\n        )}\n\n        <div\n          className={`d-flex flex-column justify-content-center align-items-center ${\n            noData && \"h-100\"\n          }`}\n        >\n          {noData ? (\n            <p\n              className=\"p-0 m-0\"\n              style={{ fontSize: \"14px\", fontFamily: \"Poppins\" }}\n            >\n              No Data Found\n            </p>\n          ) : (\n            \"\"\n          )}\n        </div>\n        {list}\n        {/* {data.length && !loading ?  : \"\"} */}\n      </div>\n      <div className=\"my-3 mt-2 d-flex justify-content-between me-3\">\n        <Button\n          colorTheme={colorTheme}\n          border={`2px solid ${theme.dropDown.cancelBorder}`}\n          backgroundColor={theme.dropDown.cancel}\n          color={theme.dropDown.cancelColor}\n          noBorder={true}\n          onClick={handleClearClick}\n        >\n          Clear\n        </Button>\n        <Button\n          colorTheme={colorTheme}\n          data-bs-toggle=\"collapse\"\n          data-bs-target={dropDownId.toString()}\n          marginLeft={\"12px\"}\n          backgroundColor={ThemeColorIdentifier(colorTheme)}\n          onClick={handleApplyClick}\n        >\n          Apply\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DropDownListComponent);\n","import styled from \"styled-components\"\n\nexport const SearchBarWrapper = styled.div`\n  color: ${(props) => props.theme.colorCards} !important;\n  background: ${(props) => props.theme.bgCards} !important;\n  box-shadow: ${(props) => props.theme.shadowCards} !important;\n`;\n\nexport const SearchBarInput = styled.input`\n  color: ${(props) => props.theme.sideSearch.color} !important;\n  background: ${(props) => props.theme.bgCards} !important;\n`;\n\nexport const SpanIcon = styled.span`\n  color: ${(props) => props.theme.color};\n  margin-top: 1.4px !important;\n`;\n","import * as React from \"react\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport { useHistory } from \"react-router-dom\";\nimport styled, { ThemeContext } from \"styled-components\";\nimport { ThemeColorIdentifier } from \"../../helper-function/themeColor\";\nimport {\n  SearchBarInput,\n  SearchBarWrapper,\n  SpanIcon,\n} from \"../../styles-components/SearchBar\";\n\nexport interface SearchBarTypes {\n  filterState: any;\n  setSearchBarExpanded: any;\n  colorTheme: string;\n  searchBarExpanded: boolean;\n  actions: any;\n}\n\nconst Badges = styled.div<any>(\n  {\n    borderRadius: \"20px\",\n    padding: \"0.5rem 1rem 0.5rem 1rem\",\n    width: \"fit-content\",\n    fontFamily: \"Poppins\",\n    fontWeight: \"600\",\n    transition: \"All 0.3s\",\n    fontSize: \"12px\",\n  },\n  (props) => {\n    return {\n      transition: \"All 0.3s\",\n      color: props.active ? \"white\" : props.themeColor,\n      background: props.active\n        ? ThemeColorIdentifier(props.colorTheme)\n        : props.theme,\n    };\n  }\n);\n\nfunction NoDataMessage() {\n  const theme = React.useContext(ThemeContext);\n  return (\n    <div\n      className=\"d-flex flex-column justify-content-center align-items-center text-muted opacity-5 h-100 transition\"\n      style={{ color: theme.sideSearch.color }}\n    >\n      No Result Found.\n    </div>\n  );\n}\n\nconst ScrollableDiv = styled.div({\n  width: \"100%\",\n  overflowX: \"scroll\",\n  overflowY: \"hidden\",\n  cursor: \"pointer\",\n  \"&::-webkit-scrollbar\": {\n    height: \"5px\",\n    display: \"none\",\n  },\n  \"&::-webkit-scrollbar-track\": {\n    boxShadow: \"inset 0 0 0px grey\",\n    borderRadius: \"10px\",\n    height: \"45px\",\n  },\n  \"&::-webkit-scrollbar-thumb\": {\n    background: \"#c4c4c4\",\n    borderRadius: \"7px\",\n  },\n});\n\nconst Hr = styled.div({\n  width: \"100%\",\n  height: \"1px\",\n  background: \"#DDDDDD\",\n});\n\nconst TYPES = [\"All\", \"Sectors\", \"States\", \"Industries\", \"Stages\"];\n\ninterface SelectorType {\n  label: string;\n  type: string;\n  onClick?: any;\n  obj: any;\n  active: any[];\n}\n\nfunction Selector({ label, type, obj, onClick, active }: SelectorType) {\n  const activeId = active.findIndex((i) => i === obj.id);\n  const theme = React.useContext(ThemeContext);\n  return (\n    <div\n      onClick={() => onClick(obj)}\n      style={{ color: theme.sideSearch.color }}\n      className={`d-flex justify-content-between transition text-hover ${\n        activeId !== -1 ? \"text-primary\" : \"\"\n      }`}\n    >\n      <p className=\"font-500 font-14px transition text-hover\">{label}</p>\n      <p className=\"opacity-5 font-14px\">{type.toUpperCase()}</p>\n    </div>\n  );\n}\n\ninterface KeyValuePair {\n  id: string;\n  value: string;\n}\n\nconst VeriticallyScrollableDiv = styled.div({\n  minHeight: \"100px\",\n  maxHeight: \"400px\",\n  overflowY: \"scroll\",\n  overflowX: \"hidden\",\n  \"&::-webkit-scrollbar\": {\n    width: \"5px\",\n    display: \"none\",\n  },\n  \"&::-webkit-scrollbar-track\": {\n    boxShadow: \"inset 0 0 0px grey\",\n    borderRadius: \"10px\",\n    height: \"45px\",\n  },\n  \"&::-webkit-scrollbar-thumb\": {\n    background: \"#c4c4c4\",\n    borderRadius: \"7px\",\n  },\n});\n\nexport default function SearchBar({\n  searchBarExpanded,\n  actions,\n  filterState,\n  colorTheme,\n  setSearchBarExpanded,\n}: SearchBarTypes) {\n  const {\n    handleSectorClick,\n    onApplySector,\n    handleStagesClick,\n    onApplyStages,\n    handleIndustryClick,\n    onApplyIndustry,\n    setAppliedFilters,\n    appliedFilters,\n  } = actions;\n  const [searchText, setSearchText] = React.useState<string>(\"\");\n  const [activeFilterType, setActiveFilterType] = React.useState<string>(\n    TYPES[0]\n  );\n  const history = useHistory();\n  const theme = React.useContext(ThemeContext);\n  const [allTypeDisplayLimit, setAllTypeDisplayLimit] = React.useState(3);\n\n  const applyState = (state: any) =>\n    history.push(`/maps/?id=${state.id}&state=${state.value}`);\n\n  const applyStages = (stage: any) =>\n    setAppliedFilters((prev: any) => {\n      const currentStages = [...prev.stages];\n      const index = findIndex(currentStages, stage.id);\n      if (index === -1) currentStages.push(stage.id);\n      else currentStages.splice(index, 1);\n      return { ...prev, stages: currentStages };\n    });\n\n  const findIndex = (array: any[], id: string) =>\n    array.findIndex((i: any) => i === id);\n\n  const applySector = (sector: any) =>\n    setAppliedFilters((prev: any) => {\n      const currentSectors = [...prev.sectors];\n      const index = findIndex(currentSectors, sector.id);\n      if (index === -1) currentSectors.push(sector.id);\n      else currentSectors.splice(index, 1);\n      return { ...prev, sectors: currentSectors };\n    });\n\n  const applyIndustry = (industry: any) =>\n    setAppliedFilters((prev: any) => {\n      const currentIndustries = [...prev.industries];\n      const index = findIndex(currentIndustries, industry.id);\n      if (index === -1) currentIndustries.push(industry.id);\n      else currentIndustries.splice(index, 1);\n      return { ...prev, industries: currentIndustries };\n    });\n\n  const handleSearchTextChange = (changeEvent: any) => {\n    const value = changeEvent.target.value;\n    setSearchBarExpanded(value.length > 0);\n    setSearchText(value);\n  };\n\n  const states = filterState.states\n    .filter(\n      (i: KeyValuePair) =>\n        i.value.toLowerCase().includes(searchText.toLowerCase()) ||\n        i.id == searchText\n    )\n    .slice(0, allTypeDisplayLimit)\n    .sort((a: KeyValuePair, b: KeyValuePair) => a.value.localeCompare(b.value));\n\n  const sectors = filterState.sectors\n    .filter(\n      (i: KeyValuePair) =>\n        i.value.toLowerCase().includes(searchText.toLowerCase()) ||\n        i.id == searchText\n    )\n    .slice(0, allTypeDisplayLimit)\n    .sort((a: KeyValuePair, b: KeyValuePair) => a.value.localeCompare(b.value));\n\n  const industries = filterState.industries\n    .filter(\n      (i: KeyValuePair) =>\n        i.value.toLowerCase().includes(searchText.toLowerCase()) ||\n        i.id == searchText\n    )\n    .slice(0, allTypeDisplayLimit)\n    .sort((a: KeyValuePair, b: KeyValuePair) => a.value.localeCompare(b.value));\n  const stages = filterState.stages\n    .filter(\n      (i: KeyValuePair) =>\n        i.value.toLowerCase().includes(searchText.toLowerCase()) ||\n        i.id == searchText\n    )\n    .slice(0, allTypeDisplayLimit)\n    .sort((a: KeyValuePair, b: KeyValuePair) => a.value.localeCompare(b.value));\n\n  const handleTabClick = (name: string) => {\n    if (name === \"All\") setAllTypeDisplayLimit(3);\n    else setAllTypeDisplayLimit(filterState[name.toLowerCase()].length);\n    setActiveFilterType(name);\n  };\n\n  const showMoreData = () => setAllTypeDisplayLimit((prev) => prev + 3);\n  return (\n    <div\n      className=\"row search-bar-row\"\n      style={{\n        boxShadow: \"0px 0px 10px rgb(193 193 193 / 25%)\",\n        background: theme.sideSearch.background,\n      }}\n    >\n      <SearchBarWrapper className=\"rounded h-100 d-flex mx-0 px-0 search-bar\">\n        <SpanIcon\n          className=\"btn shadow-none border-0 m-0 pe-1 ps-4 \"\n          id=\"search-addon\"\n        >\n          <BiSearchAlt2 size={17.06} style={{ marginBottom: \"3px\" }} />\n        </SpanIcon>\n        <SearchBarInput\n          type=\"search\"\n          value={searchText}\n          className=\"form-control ps-2\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          aria-describedby=\"search-addon\"\n          onChange={handleSearchTextChange}\n        />\n      </SearchBarWrapper>\n      {searchBarExpanded ? (\n        <ScrollableDiv\n          className=\"d-inline-flex p-3 py-2\"\n          style={{ background: theme.sideSearch.background }}\n        >\n          {TYPES.map((name) => (\n            <Badges\n              theme={theme.sideSearch.background}\n              themeColor={theme.sideSearch.color}\n              colorTheme={colorTheme}\n              onClick={() => handleTabClick(name)}\n              active={activeFilterType === name}\n            >\n              {name}\n            </Badges>\n          ))}\n        </ScrollableDiv>\n      ) : (\n        <></>\n      )}\n      {searchBarExpanded ? (\n        <div className=\"px-3\">\n          <Hr />\n        </div>\n      ) : (\n        <></>\n      )}\n      {searchBarExpanded && activeFilterType === TYPES[0] ? (\n        <VeriticallyScrollableDiv\n          className=\"px-3\"\n          style={{ background: theme.sideSearch.background }}\n        >\n          <div\n            className=\"pt-3\"\n            style={{ background: theme.sideSearch.background }}\n          >\n            {states.map((i: any) => (\n              <Selector\n                obj={i}\n                label={i.value}\n                active={appliedFilters.states}\n                onClick={applyState}\n                type=\"State\"\n                key={i.id}\n              />\n            ))}\n          </div>\n\n          {states.length === 0 ? <></> : <Hr />}\n          <div\n            className=\"pt-3\"\n            style={{ background: theme.sideSearch.background }}\n          >\n            {sectors.map((i: any) => (\n              <Selector\n                obj={i}\n                label={i.value}\n                active={appliedFilters.sectors}\n                onClick={applySector}\n                type=\"Sectors\"\n                key={i.id}\n              />\n            ))}\n          </div>\n          {sectors.length === 0 ? <></> : <Hr />}\n          <div\n            className=\"pt-3\"\n            style={{ background: theme.sideSearch.background }}\n          >\n            {industries.map((i: any) => (\n              <Selector\n                obj={i}\n                label={i.value}\n                active={appliedFilters.industries}\n                onClick={applyIndustry}\n                type=\"Industries\"\n                key={i.id}\n              />\n            ))}\n          </div>\n          {states.length > allTypeDisplayLimit ||\n          sectors.length > allTypeDisplayLimit ||\n          industries.length > allTypeDisplayLimit ? (\n            <p\n              className=\"text-primary cursor-pointer text-center font-600 font-12px font-Mont\"\n              onClick={showMoreData}\n            >\n              View More\n            </p>\n          ) : (\n            <></>\n          )}\n        </VeriticallyScrollableDiv>\n      ) : (\n        <></>\n      )}\n\n      {searchBarExpanded && activeFilterType === \"Sectors\" ? (\n        <VeriticallyScrollableDiv className=\"pt-3 px-3\">\n          {sectors.length === 0 ? <NoDataMessage /> : <></>}\n          {sectors.map((i: any) => (\n            <Selector\n              obj={i}\n              label={i.value}\n              active={appliedFilters.sectors}\n              onClick={applySector}\n              type=\"\"\n              key={i.id}\n            />\n          ))}\n        </VeriticallyScrollableDiv>\n      ) : (\n        <></>\n      )}\n\n      {searchBarExpanded && activeFilterType === \"States\" ? (\n        <VeriticallyScrollableDiv\n          className=\"pt-3 px-3\"\n          style={{ background: theme.sideSearch.background }}\n        >\n          {states.length === 0 ? <NoDataMessage /> : <></>}\n          {states.map((i: any) => (\n            <Selector\n              obj={i}\n              active={appliedFilters.states}\n              onClick={applyState}\n              label={i.value}\n              type=\"\"\n              key={i.id}\n            />\n          ))}\n        </VeriticallyScrollableDiv>\n      ) : (\n        <></>\n      )}\n\n      {searchBarExpanded && activeFilterType === \"Industries\" ? (\n        <VeriticallyScrollableDiv\n          className=\"pt-3 px-3\"\n          style={{ background: theme.sideSearch.background }}\n        >\n          {industries.length === 0 ? <NoDataMessage /> : <></>}\n          {industries.map((i: any) => (\n            <Selector\n              obj={i}\n              label={i.value}\n              type=\"\"\n              active={appliedFilters.industries}\n              onClick={applyIndustry}\n              key={i.id}\n            />\n          ))}\n        </VeriticallyScrollableDiv>\n      ) : (\n        <></>\n      )}\n      {searchBarExpanded && activeFilterType === \"Stages\" ? (\n        <VeriticallyScrollableDiv\n          className=\"pt-3 px-3\"\n          style={{ background: theme.sideSearch.background }}\n        >\n          {stages.length === 0 ? <NoDataMessage /> : <></>}\n          {stages.map((i: any) => (\n            <Selector\n              obj={i}\n              label={i.value}\n              onClick={applyStages}\n              type=\"\"\n              active={appliedFilters.stages}\n              key={i.id}\n            />\n          ))}\n        </VeriticallyScrollableDiv>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport DropDownListComponent from \"./DropDownListComponent\";\nimport \"../../../scss/HomePageStyles/leftNavComponent.scss\";\nimport { RoundedBadge } from \"../../../styles-components/Badge\";\nimport HomePageApi from \"../../../config/homepageApis.json\";\nimport { useQuery } from \"../../../hooks/useQuery\";\nimport * as MapVariables from \"../Map/variables\";\nimport { Card } from \"../../../styles-components/Cards\";\nimport styled from \"styled-components\";\nimport { ThemeContext } from \"../../../config/context\";\nimport * as React from \"react\";\nimport { styled as MaterialStyled } from \"@mui/material/styles\";\nimport MuiAccordion, { AccordionProps } from \"@mui/material/Accordion\";\nimport MuiAccordionSummary, {\n  AccordionSummaryProps,\n} from \"@mui/material/AccordionSummary\";\nimport MuiAccordionDetails from \"@mui/material/AccordionDetails\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { useHistory } from \"react-router-dom\";\nimport SearchBar from \"../AllSearch\";\nimport ViewInsight from \"../ViewInsight\";\n\nconst ResetButton = styled.button(\n  {\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"37px\",\n    width: \"100%\",\n    alignItems: \"center\",\n    fontFamily: \"Montserrat\",\n  },\n  (props: any) => {\n    return {\n      background: props.theme.resetButton,\n    };\n  }\n);\n\nconst Accordion = MaterialStyled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `0px solid ${theme.palette.divider}`,\n  background: theme.palette.mode === \"dark\" ? \"rgba(37, 40, 58, 1)\" : \"white\",\n  \"&:not(:last-child)\": {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  \"&:last-child\": {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  \"&:before\": {\n    display: \"none\",\n  },\n}));\n\nconst AccordionSummary = MaterialStyled((props: AccordionSummaryProps) => {\n  const theme = useContext(ThemeContext);\n  return (\n    <MuiAccordionSummary\n      expandIcon={\n        <KeyboardArrowDownIcon sx={{ fontSize: \"18px\", color: theme.color }} />\n      }\n      {...props}\n    />\n  );\n})(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === \"dark\" ? \"rgba(37, 40, 58, 1)\" : \"white\",\n  flexDirection: \"row-reverse\",\n  border: \"0px\",\n  paddingLeft: 0,\n  paddingRight: 0,\n  alignItems: \"flex-end\",\n  paddingBottom: \"5px\",\n  \"& .MuiAccordionSummary-expandIconWrapper.Mui-expanded\": {\n    transform: \"rotate(-180deg)\",\n    marginRight: \"10px\",\n    marginBottom: \"4px\",\n  },\n  \"& .MuiAccordionSummary-expandIconWrapper\": {\n    marginRight: \"10px\",\n    marginBottom: \"4px\",\n  },\n  \"& .MuiAccordionSummary-content\": {\n    marginLeft: \"0px\",\n    margin: 0,\n    padding: 0,\n  },\n}));\n\nconst AccordionDetails = MaterialStyled(MuiAccordionDetails)(({ theme }) => ({\n  padding: 0,\n  background: theme.palette.mode === \"dark\" ? \"rgba(37, 40, 58, 1)\" : \"white\",\n}));\n\nconst DropDown = styled.button`\n  color: ${(props) => props.theme.colorCards} !important;\n  padding: 0px !important;\n`;\n\nconst LeftNavComponent = (props: any) => {\n  const {\n    setSelectedArea,\n    selectedArea,\n    tagsResources,\n    appliedFilters,\n    setAppliedFilters,\n    colorTheme,\n    fetchFilterList,\n    filterState,\n    filterLoading,\n    noShadow,\n    insight,\n    search: searchVisible,\n    dateRange,\n    dateRangeState,\n    dateRangeLoading,\n    selectedState,\n    setSelectedState,\n    handleToggle,\n    setStateViewMode,\n  } = props;\n\n  const [expanded, setExpanded] = React.useState<string | false>(\"\");\n  const [searchBarExpanded, setSearchBarExpanded] = useState<boolean>(false);\n\n  const theme = useContext(ThemeContext);\n  const history = useHistory();\n\n  const [selectedSector, setSelectedSector] = useState<any[]>([]);\n  const [selectedStages, setSelectedStages] = useState<any[]>([]);\n  const [selectedIndustry, setSelectedIndustry] = useState<any[]>([]);\n  const [selectedBadges, setSelectedBadges] = useState<any[]>([]);\n\n  const [leftNavWidth, setLeftNavWidth] = useState<number>(0);\n\n  const [fetchBadges, badgesState, badgesLoading] = useQuery(\n    HomePageApi.badges\n  );\n\n  const findSelectedIndex = (array: any[], obj: any) =>\n    array.findIndex((item: any) => item.id === obj.id);\n\n  const handleStateClick = (state: any) => {\n    const stateIndex = findSelectedIndex(selectedState, state);\n    if (stateIndex !== -1) {\n      return setSelectedState([]);\n    }\n    setSelectedState([state]);\n  };\n\n  const closeModal = () => {\n    if (handleToggle) {\n      handleToggle();\n    }\n  };\n\n  const onApplyState = () => {\n    const stateIdsForAPiRequest = new Array();\n    selectedState.forEach((state: any) => stateIdsForAPiRequest.push(state.id));\n\n    setAppliedFilters((prevState: any) => ({\n      ...prevState,\n      states: stateIdsForAPiRequest,\n    }));\n\n    if (selectedState.length > 0) {\n      const area = {\n        id: selectedState[0].id,\n        stateName: selectedState[0].value,\n      };\n      setSelectedArea(area);\n      setExpanded(false);\n      history.push(`/maps/?id=${area.id}&state=${area.stateName}`);\n      closeModal();\n    } else {\n      setExpanded(false);\n      history.push(`/maps/`);\n    }\n  };\n\n  const handleSectorClick = (sectorObj: any) => {\n    const sectorIndex = findSelectedIndex(selectedSector, sectorObj);\n    let sectors: any[] = [];\n    if (sectorIndex !== -1) {\n      setSelectedSector((prevState: any) => {\n        const newSectors = [...prevState];\n        newSectors.splice(sectorIndex, 1);\n        sectors = newSectors;\n        return newSectors;\n      });\n      return sectors;\n    }\n    setSelectedSector((prevState: any) => {\n      const newSectors = [...prevState, sectorObj];\n      sectors = newSectors;\n      return newSectors;\n    });\n\n    return sectors;\n  };\n\n  const onApplySector = () => {\n    const sectorIdsForAPiRequest = new Array();\n    selectedSector.forEach((sector: any) =>\n      sectorIdsForAPiRequest.push(sector.id)\n    );\n\n    setAppliedFilters((prevState: any) => ({\n      ...prevState,\n      sectors: sectorIdsForAPiRequest,\n    }));\n    setExpanded(false);\n    closeModal();\n  };\n\n  const onSectorClear = () => {\n    setSelectedSector([]);\n    setAppliedFilters((prev: any) => ({ ...prev, sectors: [] }));\n  };\n\n  const handleStagesClick = (stage: any) => {\n    const stagesIndex = findSelectedIndex(selectedStages, stage);\n    if (stagesIndex !== -1) {\n      return setSelectedStages((prevState: any) => {\n        const newStages = [...prevState];\n        newStages.splice(stagesIndex, 1);\n        return newStages;\n      });\n    }\n    return setSelectedStages((prevState: any) => {\n      const newStages = [...prevState, stage];\n      return newStages;\n    });\n  };\n  const onApplyStages = () => {\n    const stagesIdsForApiRequest = new Array();\n    selectedStages.forEach((sector: any) =>\n      stagesIdsForApiRequest.push(sector.id)\n    );\n\n    setAppliedFilters((prevState: any) => ({\n      ...prevState,\n      stages: stagesIdsForApiRequest,\n    }));\n    setExpanded(false);\n    closeModal();\n  };\n\n  const handleIndustryClick = (industry: any) => {\n    const industryIndex = findSelectedIndex(selectedIndustry, industry);\n    if (industryIndex !== -1) {\n      return setSelectedIndustry((prevState: any) => {\n        const newIndustry = [...prevState];\n        newIndustry.splice(industryIndex, 1);\n        return newIndustry;\n      });\n    }\n    return setSelectedIndustry((prevState: any) => {\n      const newIndustry = [...prevState, industry];\n      return newIndustry;\n    });\n  };\n  const onApplyIndustry = () => {\n    const stagesIdsForApiRequest = new Array();\n    selectedIndustry.forEach((sector: any) =>\n      stagesIdsForApiRequest.push(sector.id)\n    );\n\n    setAppliedFilters((prevState: any) => ({\n      ...prevState,\n      industries: stagesIdsForApiRequest,\n    }));\n    setExpanded(false);\n    closeModal();\n  };\n\n  const onIndustryClear = () => {\n    setSelectedIndustry([]);\n    setAppliedFilters((prev: any) => ({ ...prev, industries: [] }));\n  };\n\n  const handleBadgesClick = (badges: any) => {\n    const badgesIndex = findSelectedIndex(selectedBadges, badges);\n    if (badgesIndex !== -1) {\n      return setSelectedBadges((prevState: any) => {\n        const newsBadges = [...prevState];\n        newsBadges.splice(badgesIndex, 1);\n        return newsBadges;\n      });\n    }\n    return setSelectedBadges((prevState: any) => {\n      const newsBadges = [badges];\n      return newsBadges;\n    });\n  };\n  const onApplyBadges = () => {\n    const badgesIdsForApiRequest = new Array();\n    selectedBadges.forEach((sector: any) =>\n      badgesIdsForApiRequest.push(sector.id)\n    );\n\n    setAppliedFilters((prevState: any) => ({\n      ...prevState,\n      badges: badgesIdsForApiRequest,\n    }));\n    setExpanded(false);\n    closeModal();\n  };\n\n  const onClearBadges = () => {\n    setSelectedBadges([]);\n    setAppliedFilters((prev: any) => ({ ...prev, badges: [] }));\n  };\n\n  const trimBadges = (badges: any[]) => {\n    const newBadgesList = new Array();\n    badges.forEach((badge: any) =>\n      newBadgesList.push({ id: badge.id, value: badge.title })\n    );\n    return [\n      { id: \"true\", value: \"Yes\" },\n      { id: \"false\", value: \"No\" },\n    ];\n  };\n\n  useEffect(() => {\n    // fetchBadges();\n    fetchFilterList();\n  }, []);\n\n  useEffect(() => {\n    if (selectedArea.id !== \"india\") {\n      setSelectedState([\n        { id: selectedArea.id, value: selectedArea.stateName },\n      ]);\n      setAppliedFilters((prevState: any) => ({\n        ...prevState,\n        states: [selectedArea.id],\n      }));\n    } else {\n      setSelectedState([]);\n      setAppliedFilters((prevState: any) => ({ ...prevState, states: [] }));\n    }\n  }, [selectedArea]);\n  useEffect(() => {\n    if (\n      appliedFilters &&\n      appliedFilters.sectors &&\n      appliedFilters.sectors.length > 0\n    ) {\n      let sectors = [...appliedFilters.sectors];\n      setSelectedSector(sectors);\n    }\n  }, [appliedFilters.sectors]);\n  const handleChange =\n    (panel: string) => (event: React.SyntheticEvent, newExpanded: boolean) => {\n      setExpanded(newExpanded ? panel : false);\n    };\n\n  const viewInsightUrl = `/view-insight?id=${\n    selectedState[0] ? selectedState[0].id : \"\"\n  }&state=${selectedState[0] ? selectedState[0].value : \"\"}`;\n  const actions = {\n    handleStateClick,\n    closeModal,\n    onApplyState,\n    handleSectorClick,\n    onApplySector,\n    handleStagesClick,\n    onApplyStages,\n    handleIndustryClick,\n    onApplyIndustry,\n    setAppliedFilters,\n    appliedFilters,\n  };\n\n  const onApplyResetFilter = () => {\n    setAppliedFilters((prev: any) => ({\n      ...prev,\n      industries: [],\n      sectors: [],\n      states: [],\n      stages: [],\n    }));\n    setSelectedArea(MapVariables.INDIA);\n    history.push(\"/maps/\");\n    setStateViewMode(false);\n    setSelectedState([]);\n    setSelectedSector([]);\n    setSelectedIndustry([]);\n    setSelectedStages([]);\n    setSelectedStages([]);\n  };\n\n  const isResetFilterVisible =\n    appliedFilters.states.length > 0 ||\n    appliedFilters.sectors.length > 0 ||\n    appliedFilters.industries.length > 0 ||\n    appliedFilters.stages.length > 0;\n  return (\n    <>\n      <div\n        className=\"left-side-nav-styles\"\n        style={{\n          position: \"sticky\",\n          top: \"96px\",\n          zIndex: 10,\n        }}\n      >\n        <div className=\"px-2\">\n          {!expanded && searchVisible ? (\n            <SearchBar\n              filterState={filterState}\n              actions={actions}\n              searchBarExpanded={searchBarExpanded}\n              colorTheme={colorTheme}\n              setSearchBarExpanded={setSearchBarExpanded}\n            />\n          ) : (\n            <></>\n          )}\n          {!searchBarExpanded ? (\n            <>\n              <Card\n                noShadow={noShadow}\n                className={`row mb-3 ps-2 pe-0 py-0 bg-white pb-2 dropdown-card p-16px ${\n                  !searchVisible && \"mt-0\"\n                }`}\n                id=\"flush1\"\n              >\n                <Accordion\n                  expanded={expanded === \"panel1\"}\n                  onChange={handleChange(\"panel1\")}\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                  >\n                    <DropDown\n                      className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\n                      type=\"button\"\n                    >\n                      States and UTs\n                      {appliedFilters.states.length !== 0 && (\n                        <RoundedBadge className=\"ms-auto me-3 background-color-theme\">\n                          {appliedFilters.states.length}\n                        </RoundedBadge>\n                      )}\n                      {\n                        <span className=\"count-text ms-auto\">\n                          {filterState.states.length}\n                        </span>\n                      }\n                    </DropDown>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <DropDownListComponent\n                      accessor={\"states\"}\n                      colorTheme={colorTheme}\n                      originalData={filterState.states}\n                      loading={filterLoading}\n                      handleClick={handleStateClick}\n                      selectedItem={selectedState}\n                      handleApplyClick={onApplyState}\n                      dropDownId={\"#collapse1\"}\n                      handleClearClick={() => {\n                        setSelectedState([]);\n                        setSelectedArea(MapVariables.INDIA);\n                      }}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n                <Accordion\n                  expanded={expanded === \"panel3\"}\n                  onChange={handleChange(\"panel3\")}\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                  >\n                    <DropDown\n                      className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\n                      type=\"button\"\n                    >\n                      Industries\n                      {appliedFilters.industries.length !== 0 && (\n                        <RoundedBadge className=\"ms-auto me-3 background-color-theme\">\n                          {appliedFilters.industries.length}\n                        </RoundedBadge>\n                      )}\n                      {\n                        <span className=\"count-text ms-auto\">\n                          {filterState.industries.length}\n                        </span>\n                      }\n                    </DropDown>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <DropDownListComponent\n                      accessor={\"industries\"}\n                      colorTheme={colorTheme}\n                      originalData={filterState.industries}\n                      loading={filterLoading}\n                      selectedItem={selectedIndustry}\n                      handleClick={handleIndustryClick}\n                      handleApplyClick={onApplyIndustry}\n                      dropDownId={\"#collapse3\"}\n                      handleClearClick={onIndustryClear}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n\n                <Accordion\n                  expanded={expanded === \"panel2\"}\n                  onChange={handleChange(\"panel2\")}\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                  >\n                    <DropDown\n                      className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\n                      type=\"button\"\n                    >\n                      Sectors\n                      {appliedFilters.sectors.length !== 0 && (\n                        <RoundedBadge className=\"ms-auto me-3 background-color-theme\">\n                          {appliedFilters.sectors.length}\n                        </RoundedBadge>\n                      )}\n                      {\n                        <span className=\"count-text ms-auto\">\n                          {filterState.sectors.length}\n                        </span>\n                      }\n                    </DropDown>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <DropDownListComponent\n                      accessor={\"sectors\"}\n                      colorTheme={colorTheme}\n                      originalData={filterState.sectors}\n                      loading={filterLoading}\n                      selectedItem={selectedSector}\n                      handleClick={handleSectorClick}\n                      handleApplyClick={onApplySector}\n                      dropDownId={\"#collapse2\"}\n                      handleClearClick={onSectorClear}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n\n                <Accordion\n                  expanded={expanded === \"panel4\"}\n                  onChange={handleChange(\"panel4\")}\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                  >\n                    <DropDown\n                      className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\n                      type=\"button\"\n                    >\n                      Stages\n                      {appliedFilters.stages.length !== 0 && (\n                        <RoundedBadge className=\"ms-auto me-3 background-color-theme\">\n                          {appliedFilters.stages.length}\n                        </RoundedBadge>\n                      )}\n                      {\n                        <span className=\"count-text ms-auto\">\n                          {filterState.stages.length}\n                        </span>\n                      }\n                    </DropDown>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <DropDownListComponent\n                      accessor={\"stages\"}\n                      colorTheme={colorTheme}\n                      originalData={filterState.stages}\n                      loading={filterLoading}\n                      selectedItem={selectedStages}\n                      handleClick={handleStagesClick}\n                      handleApplyClick={onApplyStages}\n                      dropDownId={\"#collapse4\"}\n                      handleClearClick={() => setSelectedStages([])}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n                <Accordion\n                  expanded={expanded === \"panel5\"}\n                  onChange={handleChange(\"panel5\")}\n                  className=\"border-0\"\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                  >\n                    <DropDown\n                      className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\n                      type=\"button\"\n                    >\n                      Winner Badges\n                      {appliedFilters.badges.length > 0 && (\n                        <RoundedBadge className=\"ms-auto me-3 background-color-theme\">\n                          {appliedFilters.badges.length}\n                        </RoundedBadge>\n                      )}\n                      <span className=\"count-text ms-auto\">{2}</span>\n                    </DropDown>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <DropDownListComponent\n                      accessor={\"value\"}\n                      colorTheme={colorTheme}\n                      originalData={trimBadges(badgesState)}\n                      loading={false}\n                      height={\"200px\"}\n                      selectedItem={selectedBadges}\n                      handleClick={handleBadgesClick}\n                      handleApplyClick={onApplyBadges}\n                      noSort={true}\n                      dropDownId={\"#collapse5\"}\n                      handleClearClick={() => {\n                        setSelectedBadges([]);\n                      }}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n                {dateRange && (\n                  <Accordion\n                    expanded={expanded === \"panel6\"}\n                    onChange={handleChange(\"panel6\")}\n                  >\n                    <AccordionSummary\n                      aria-controls=\"panel1d-content\"\n                      id=\"panel1d-header\"\n                    >\n                      <DropDown\n                        className={`btn shadow-none d-flex w-100 mx-0 px-0 align-items-center mt-1 collapsed px-0 position-relative p-`}\n                        type=\"button\"\n                      >\n                        Date Range\n                      </DropDown>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <DropDownListComponent\n                        accessor={\"value\"}\n                        colorTheme={colorTheme}\n                        originalData={dateRangeState}\n                        loading={dateRangeLoading}\n                        selectedItem={selectedBadges}\n                        handleClick={handleBadgesClick}\n                        handleApplyClick={onApplyBadges}\n                        noSort={false}\n                        dropDownId={\"#collapse6\"}\n                        handleClearClick={onClearBadges}\n                      />\n                    </AccordionDetails>\n                  </Accordion>\n                )}\n                {isResetFilterVisible ? (\n                  <ResetButton\n                    onClick={onApplyResetFilter}\n                    className=\"border-color-theme border-radius-4px mt-2 mb-3 text-theme\"\n                  >\n                    Reset All Filter\n                  </ResetButton>\n                ) : (\n                  <></>\n                )}\n              </Card>\n            </>\n          ) : (\n            <></>\n          )}\n          {insight && (\n            <ViewInsight\n              colorTheme={colorTheme}\n              viewInsightUrl={viewInsightUrl}\n              selectedState={selectedState}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(LeftNavComponent);\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport const Card = styled.div<any>`\npadding: 20px 16px 20px 16px;\nbackground: ${props=> props.background ? props.background : props.theme.bgCards} !important;\nbox-shadow: ${props=> props.theme.shadowCards} !important;\nborder-radius: 4px;\ncolor: ${props=> props.theme.colorCards} !important;\nborder: ${ props=> props.border && props.theme.showCaseStartUpBorder};\n@media (max-width:768px){\n    box-shadow: ${(props:any)=> props.noShadow ? '0px 0px black' : props.theme.shadowCards } !important;\n}\n`\n\nexport const CountCard = styled.div<any>`\n    background: ${props=> props.active ? \"#0177FA\" : props.theme.bgCards};\n    color: ${props=> props.active ? 'white' : props.theme.bgCards}\n`","import styled from \"styled-components\";\n\nexport const Badge = styled.div`\n    border-radius: 12px;\n    color: black;\n    padding: 3px 6px;\n    padding-bottom: 2px !important;\n    font-size: smaller;\n    font-weight: 500;\n    font-size: 12px;\n    background-color: ${props=> props.theme.bgBadge} ;\n   \n    color: ${props=> props.theme.color};\n    height: fit-content;\n    max-width: 100% ;\n    &:first-child{\n      margin-top: -1px !important;\n    }\n  `;\n\nexport const RoundedBadge = styled.div`\n   width: 23px;\n   height: 23px;\n   font-size: 13px;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   color: #feffff;\n   border-radius: 50%;\n   position: absolute;\n   right: 1rem;\n   visibility: ${props=> props.hidden ? \"hidden\": 'visible'};\n  `\n// export const RoundedBadge = styled.span`\n//     padding-top: 3px;\n//     padding-bottom: 3px;\n//     width:13.5%;\n//     color: #feffff;\n//     background-color: #0177fa;\n//     border-radius: 50%;\n//   `\n"],"sourceRoot":""}