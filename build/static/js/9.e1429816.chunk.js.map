{"version":3,"sources":["pages/HomePage/MapViewButtonChangeGroup.tsx","styles-components/SelectBox.tsx","pages/HomePage/ViewChangerComponent.tsx","styles-components/Cards.tsx"],"names":["MapViewChangeButtonGroup","props","isCircleActive","colorTheme","mapMode","setMapMode","setIsCircleActive","stateText","additionalClass","className","style","paddingTop","districtText","defaultView","MapVariables","theme","React","useContext","ThemeContext","TOOLTIP_SX","fontSize","background","tooltip","border","ThemeColorIdentifier","borderRadius","color","text","padding","cursor","ARROW_SX","backgroundColor","boxSizing","useEffect","activeCard","stateViewMode","placement","title","arrow","componentsProps","sx","onClick","active","id","size","marginTop","marginLeft","SelectBox","styled","select","marginBottom","colorSelect","bgCards","SelectBoxLabel","label","i","BASE_URL","process","ViewMoreButton","button","shadow","DATA_TABLE_API","DISTRICT_API","startupTypeValues","ViewChangerComponent","mapViewResources","setStateViewMode","setStartUpPolicyChart","fetchPolicy","fetchDistrict","setStartupType","useWindowSize","windowWidth","selectedArea","setSelectedArea","getCounts","fetchDateRange","dateRangeState","appliedFilters","dateRangeLoading","setAppliedFilters","fetchTableData","setDateRangeCount","setStartupCount","startupCount","today","moment","Date","format","query","useWebQuery","useState","newCount","setNewCount","selectedStartTypeIndex","setSelectedStartupTypeIndex","useQuery","fetchStartUpTypes","startUpTypes","setSelectedStartupType","selectedDateRange","setSelectedDateRange","leadingSector","setLeadingSector","dateRangeChange","changeEvent","value","target","fetchInitialCount","states","getThemeDropDownImage","dropDownColorCode","apiUrl","dateRange","type","url","get","dates","split","startupType","axios","post","from","registrationFrom","to","registrationTo","response","data","key","sectors","indexOf","_id","sectorId","filters","index","resourse","backgroundImage","onChange","map","item","visibility","MapViewButtonChangeGroup","stateName","toUpperCase","obj","filter","bgCard4","height","name","stateToRedirect","replaceAll","window","location","href","redirectToStatePolicy","Card","div","shadowCards","colorCards","showCaseStartUpBorder","noShadow"],"mappings":"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","file":"static/js/9.e1429816.chunk.js","sourcesContent":["import { Tooltip as MuiToolTip } from \"@mui/material\";\nimport \"rc-tooltip/assets/bootstrap_white.css\";\nimport React, { useEffect } from \"react\";\nimport { GiPeru } from \"react-icons/gi\";\nimport { IoMapSharp } from \"react-icons/io5\";\nimport { ThemeContext } from \"../../config/context\";\nimport { ThemeColorIdentifier } from \"../../helper-function/themeColor\";\nimport \"../../scss/HomePageStyles/viewChangerComponent.scss\";\nimport { IconButton } from \"../../styles-components/Button\";\nimport * as MapVariables from \"./Map/variables\";\n\nexport default function MapViewChangeButtonGroup(props: any) {\n  const {\n    isCircleActive,\n    colorTheme,\n    mapMode,\n    setMapMode,\n    setIsCircleActive,\n    additionalClass,\n  } = props;\n  const stateText = (\n    <div className=\" px-3\" style={{ paddingTop: \"2px\" }}>\n      <span>State</span>\n    </div>\n  );\n  const districtText = (\n    <div className=\" px-3\" style={{ paddingTop: \"2px\" }}>\n      <span>District</span>\n    </div>\n  );\n  const cityText = (\n    <div className=\" px-3\" style={{ paddingTop: \"2px\" }}>\n      <span>City</span>\n    </div>\n  );\n\n  const circleText = (\n    <div className=\" px-3\" style={{ paddingTop: \"2px\" }}>\n      <span>View</span>\n    </div>\n  );\n  const defaultView = () => setMapMode(MapVariables.INDIA);\n\n  const circleView = () => {\n    setIsCircleActive((prevState: boolean) => !prevState);\n  };\n\n  const districtView = () => setMapMode(MapVariables.DISTRICT);\n  const cityView = () => {\n    setMapMode(MapVariables.CITY);\n    setIsCircleActive(true);\n  };\n\n  const theme = React.useContext(ThemeContext);\n  const TOOLTIP_SX = {\n    fontSize: \"15px\",\n    background: theme.tooltip.background,\n    border: `2px solid ${ThemeColorIdentifier(colorTheme)}`,\n    borderRadius: \"5px\",\n    color: theme.tooltip.text,\n    padding: \"0.1rem\",\n    cursor: \"grab\",\n  };\n  const ARROW_SX = {\n    color: theme.tooltip.background,\n    \"&::before\": {\n      border: `2px solid ${ThemeColorIdentifier(colorTheme)}`,\n      backgroundColor: theme.tooltip.background,\n      boxSizing: \"border-box\",\n    },\n  };\n  useEffect(() => {\n    if (props.activeCard !== \"Startups\") {\n      defaultView();\n    }\n  }, [props.activeCard]);\n \n  return (\n    <div className={`mx-1 col-12 mt-4 `}>\n      <div className={`d-flex justify-content-between `}>\n        <div className=\"d-flex\">\n        {!props.stateViewMode ? (\n          <MuiToolTip\n            placement=\"top\"\n            title={stateText}\n            arrow\n            componentsProps={{\n              tooltip: {\n                sx: TOOLTIP_SX,\n              },\n              arrow: {\n                sx: ARROW_SX,\n              },\n            }}\n          >\n            <IconButton\n              colorTheme={colorTheme}\n              onClick={() => {\n                defaultView();\n                setIsCircleActive(false);\n              }}\n              active={mapMode.id === MapVariables.INDIA.id}\n              className={`btn-outline btn-icon-handler ${\n                mapMode.id === MapVariables.INDIA.id ? \"bg-active\" : \"\"\n              }`}\n            >\n              <IoMapSharp\n                size={18}\n                style={{ marginTop: \"0px\", marginLeft: \"-1px\" }}\n              />\n            </IconButton>\n          </MuiToolTip>\n          ) : (\n            <></>\n          )}\n          {!props.stateViewMode ? ( //props.activeCard === \"Startups\" && \n            <>\n              \n              <MuiToolTip\n                placement=\"top\"\n                title={districtText}\n                arrow\n                componentsProps={{\n                  tooltip: {\n                    sx: TOOLTIP_SX,\n                  },\n                  arrow: {\n                    sx: ARROW_SX,\n                  },\n                }}\n              >\n                <IconButton\n                  onClick={() => {\n                    districtView();\n                    setIsCircleActive(false);\n                  }}\n                  colorTheme={colorTheme}\n                  active={mapMode.id === MapVariables.DISTRICT.id}\n                  className={`btn btn-icon-handler  ${\n                    mapMode.id === MapVariables.DISTRICT.id ? \"bg-active\" : \"\"\n                  }`}\n                >\n                  <GiPeru\n                    // style={{ marginTop: \"-8px\", marginLeft: \"-1px\" }}\n                    size={18}\n                  />\n                </IconButton>\n              </MuiToolTip>\n            </>\n          ) : (\n            <></>\n          )}\n        </div>\n        {/* {!props.stateViewMode ? (\n          <div>\n            <MuiToolTip\n              placement=\"top\"\n              title={circleText}\n              arrow\n              componentsProps={{\n                tooltip: {\n                  sx: TOOLTIP_SX,\n                },\n                arrow: {\n                  sx: ARROW_SX,\n                },\n              }}\n            >\n              <IconButton\n                active={isCircleActive}\n                colorTheme={colorTheme}\n                onClick={circleView}\n                className={`btn btn-icon-handler shadow-small ${\n                  isCircleActive ? \"bg-active\" : \"\"\n                } ${mapMode.id === MapVariables.DISTRICT.id ? \"d-none\" : \"\"}`}\n              >\n                <RiDropFill\n                  size={18}\n                  // style={{ marginTop: \"-5px\", marginLeft: \"1px\" }}\n                />\n              </IconButton>\n            </MuiToolTip>\n          </div>\n        ) : (\n          <></>\n        )} */}\n      </div>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nimport { ThemeColorIdentifier, ThemeShadowColorIdentifier } from \"../helper-function/themeColor\";\n\nexport const SelectBox = styled.select<any>`\nborder: 2px solid ${(props:any)=> ThemeColorIdentifier(props.colorTheme)} !important;\nbox-sizing: border-box;\nborder-radius: 4px;\nfont-style: normal;\nfont-weight: 500;\nfont-size: 14px;\nmargin-bottom: ${props=> props.marginBottom};\nwidth:100%;\ncolor: ${props=> props.theme.colorSelect};\nbackground-color: ${props=> props.theme.bgCards};\npadding: 0.35rem 0.55rem;\nbackground-position: right 0.75rem center;\nbackground-size: 16px 12px;\nbackground-repeat: no-repeat;\nappearance: none;\n&:focus{\n    border: 2px solid ${(props:any)=> ThemeColorIdentifier(props.colorTheme)} !important;\n}\n&:active{\n    border: 2px solid ${(props:any)=> ThemeColorIdentifier(props.colorTheme)} !important;\n}\n`\n// box-shadow: ${props=> props.theme.shadowSelect + ThemeShadowColorIdentifier(props.colorTheme)};\n\nexport const SelectBoxLabel = styled.label<any>`\nfont-style: normal;\nfont-weight: 600;\nfont-size: 14px;\nline-height: 150%;\ncolor: ${props=> props.theme.color};\nmargin-bottom: ${props=> props.marginBottom || '12px'};\nwhite-space: nowrap;\n`\n// background-image: url() !important;","import axios from \"axios\";\nimport moment from \"moment\";\nimport \"rc-tooltip/assets/bootstrap_white.css\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { MdOutlineLocationCity } from \"react-icons/md\";\nimport styled from \"styled-components\";\nimport { ThemeContext } from \"../../config/context\";\nimport { ThemeColorIdentifier } from \"../../helper-function/themeColor\";\nimport { useMutate } from \"../../hooks/useMutate\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { useWebQuery } from \"../../hooks/useWebQuery\";\nimport { useWindowSize } from \"../../hooks/useWindowSize\";\nimport \"../../scss/HomePageStyles/viewChangerComponent.scss\";\nimport { Card } from \"../../styles-components/Cards\";\nimport { SelectBox, SelectBoxLabel } from \"../../styles-components/SelectBox\";\nimport { StartupType } from \"./index\";\nimport MapViewButtonChangeGroup from \"./MapViewButtonChangeGroup\";\n\ninterface ViewChangerComponentsTypes {\n  mapViewResources: any;\n  setStartUpPolicyChart: React.Dispatch<boolean>;\n  fetchPolicy: any;\n  setStateViewMode: React.Dispatch<boolean>;\n  stateViewMode: boolean;\n  fetchDistrict: any;\n  setStartupType: React.Dispatch<StartupType>;\n}\n\nconst BASE_URL = process.env.REACT_APP_BACKEND_ENDPOINT;\n\nconst DARK_THEME_DROPDOWN = `url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/></svg>\")`;\nconst LIGHT_THEME_DROPDOWN = `url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/></svg>\")`;\n\nconst ViewMoreButton = styled.button<any>`\n  font-family: Montserrat;\n  padding-top: 7px;\n  font-weight: 600;\n  font-size: 14px;\n  border: 2px solid ${(props: any) => ThemeColorIdentifier(props.colorTheme)};\n  margin-bottom: 20px;\n  color: ${(props) => props.theme.color};\n  box-shadow: ${(props) =>\n    props.shadow ? \"0px 0px 10px rgba(1, 119, 250, 0.19)\" : \"none\"} !important;\n`;\n\nconst VIEW_MORE = \"View more about \";\nconst VIEW_STATE_STARTUP_POLICY = \"View State Startup Policy\";\n\nconst DATA_TABLE_API = `${BASE_URL}/data/v2/statistics/country/5f02e38c6f3de87babe20cd2/`;\nconst DISTRICT_API = `${BASE_URL}/data/v2/statistics/state/`;\n\nconst startupTypeValues: any[] = [\n  \"allStartups\",\n  \"dpiitCertified\",\n  \"showcased\",\n  \"seedFunded\",\n  \"patented\",\n  \"womenOwned\",\n  \"leadingSector\",\n];\n\nfunction ViewChangerComponent({\n  mapViewResources,\n  setStartUpPolicyChart,\n  fetchPolicy,\n  setStateViewMode,\n  stateViewMode,\n  fetchDistrict,\n  setStartupType,\n}: ViewChangerComponentsTypes) {\n  const [windowWidth, windowHeight] = useWindowSize();\n  const {\n    isCircleActive,\n    mapMode,\n    setIsCircleActive,\n    setMapMode,\n    setSelectedArea,\n    selectedArea,\n    getCounts,\n    colorTheme,\n    fetchDateRange,\n    dateRangeState,\n    dateRangeLoading,\n    appliedFilters,\n    setAppliedFilters,\n    activeCard,\n    fetchTableData,\n    setDateRangeCount,\n    setStartupCount,\n    startupCount,\n  } = mapViewResources;\n\n  const theme = useContext(ThemeContext);\n  const today = \"2015-01-01\" + \"/\" + moment(new Date()).format(\"YYYY-MM-DD\");\n  const query = useWebQuery();\n\n  const [newCount, setNewCount] = useState<number>(startupCount);\n  const [selectedStartTypeIndex, setSelectedStartupTypeIndex] =\n    useState<number>(1);\n\n  const [fetchStartUpTypes, startUpTypes, startTypesLoading] = useQuery(\n    \"/static/startupTypes\"\n  );\n  // const [fetchStartUpCount, countState, countLoading] = useMutate(\n  //   \"home/startupCounts/all\",\n  //   {\n  //     ...appliedFilters,\n  //     from: appliedFilters.registrationFrom,\n  //     to: appliedFilters.registrationTo,\n  //   }\n  // );\n\n  const [selectedStartUpType, setSelectedStartupType] = useState<any>(0);\n  const [selectedDateRange, setSelectedDateRange] = useState<string>(\"\");\n  const [leadingSector, setLeadingSector] = useState<any>(0);\n\n  const dateRangeChange = async (changeEvent: any) => {\n    const value = changeEvent.target.value;\n    if (value === \"none\") {\n      return getCounts();\n    }\n\n    fetchTableData(DATA_TABLE_API + value);\n    getCounts(value);\n    fetchInitialCount(selectedStartTypeIndex, value);\n    setSelectedDateRange(value);\n    if (appliedFilters.states[0]) {\n      fetchDistrict(DISTRICT_API + appliedFilters.states[0] + \"/\" + value);\n    }\n  };\n\n  const startTypeChange = (changeEvent: any) => {\n    const value = changeEvent.target.value;\n    const obj = startUpTypes.filter((item: any) => item.index == value);\n    setSelectedStartupType(value);\n    setSelectedStartupTypeIndex(value);\n    setStartupType(obj[0]);\n\n    if (!appliedFilters.states[0]) {\n      fetchInitialCount(value, selectedDateRange);\n    }\n  };\n\n  const getThemeDropDownImage = () => {\n    if (theme.dropDownColorCode === 1) return LIGHT_THEME_DROPDOWN;\n    if (theme.dropDownColorCode === 0) return DARK_THEME_DROPDOWN;\n  };\n\n  // useEffect(() => {\n  //   if (countState[\"dpiitCertified\"]) {\n  //     setNewCount(countState[\"dpiitCertified\"]);\n  //   }\n  // }, [countState]);\n\n  useEffect(() => {\n    fetchDateRange();\n    fetchStartUpTypes();\n    // fetchStartUpCount();\n    // fetchInitialCount(0);\n  }, []);\n\n  // function for creating apiurl\n  const apiUrl = (dateRange: string, type: string) => {\n    let url = `home/startupCounts/${type}?`;\n    if (query.get(\"id\")) {\n      url += `stateId=${query.get(\"id\")}&`;\n    }\n    if (dateRange) {\n      let dates: any = dateRange.split(\"/\");\n      dates = `from=${dates[0]}&to=${dates[1]}`;\n      url += dates;\n    }\n\n    return url;\n  };\n\n  const fetchInitialCount = async (startupType: number, dateRange: string) => {\n    try {\n      // create and get api url\n      const type = startupTypeValues[startupType];\n      let url = apiUrl(dateRange, type);\n      let data;\n      let key;\n      // get data from api call\n      if (startupType != 8) {\n        const { data: response } = await axios.post(url, {\n          ...appliedFilters,\n          from: appliedFilters.registrationFrom,\n          to: appliedFilters.registrationTo,\n        });\n        data = response;\n        key = startupTypeValues[startupType];\n        setLeadingSector(0);\n      } else {\n        const { data: response } = await axios.post(\"home/leadingsector\", {\n          ...appliedFilters,\n          from: appliedFilters.registrationFrom,\n          to: appliedFilters.registrationTo,\n        });\n        data = response;\n        key = \"count\";\n        setLeadingSector(response);\n      }\n\n      //setting up data in state\n      if (data[key]) {\n        setNewCount(data[key]);\n      } else {\n        setNewCount(0);\n      }\n\n      if (data[key] && data[key] > 0) {\n        setDateRangeCount(true);\n      } else {\n        setDateRangeCount(false);\n      }\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    setStartupCount(newCount);\n  }, [newCount]);\n\n  useEffect(() => {\n    if (\n      leadingSector &&\n      appliedFilters.sectors.indexOf(leadingSector?._id.sectorId) === -1\n    ) {\n      let filters = { ...appliedFilters };\n      filters.sectors = [...filters.sectors, leadingSector?._id.sectorId];\n      setAppliedFilters(filters);\n    }\n  }, [leadingSector]);\n\n  useEffect(() => {\n    if (activeCard !== \"Startups\") {\n      setNewCount(startupCount);\n      setDateRangeCount(true);\n      setSelectedStartupTypeIndex(1);\n    } else {\n      setStartupType({\n        index: \"1\",\n        text: \"DPIIT recognised startups\",\n      });\n    }\n  }, [activeCard]);\n\n  useEffect(() => {\n    // if (selectedStartTypeIndex == 0) {\n    //   setNewCount(startupCount);\n    //   if (startupCount > 0) {\n    //     setDateRangeCount(true);\n    //   } else {\n    //     setDateRangeCount(false);\n    //   }\n    // } else {\n    fetchInitialCount(selectedStartTypeIndex, selectedDateRange);\n    // }\n  }, [appliedFilters, selectedStartTypeIndex, query.get(\"id\")]);\n\n  const redirectToStatePolicy = () => {\n    const stateToRedirect = selectedArea.stateName.replaceAll(\" \", \"-\");\n    window.location.href = `https://www.startupindia.gov.in/content/sih/en/state-startup-policies/${stateToRedirect}-state-policy.html`;\n  };\n\n  const resourse = {\n    isCircleActive,\n    colorTheme,\n    mapMode,\n    setMapMode,\n    setIsCircleActive,\n    activeCard,\n    stateViewMode,\n  };\n\n  return (\n    <div\n      className=\"view-changer-component-styles\"\n      style={{ marginTop: windowWidth > 768 ? \"24px\" : \"0px\" }}\n    >\n      <div className={`row ${windowWidth < 768 ? \"\" : \" mx-0 px-0\"}`}>\n        <div className=\"mx-1 col-12 align-items-center justify-content-between d-none d-sm-flex\">\n          <SelectBoxLabel className=\"p-0 m-0\">Date Range</SelectBoxLabel>\n          <SelectBox\n            id=\"dataRangeSelectBox\"\n            marginBottom=\"-0.3rem\"\n            colorTheme={colorTheme}\n            style={{\n              backgroundImage: getThemeDropDownImage(),\n            }}\n            onChange={dateRangeChange}\n          >\n            <option value={today}>All </option>\n            {dateRangeState.map((item: any) => (\n              <option\n                key={item.from + \"/\" + item.to}\n                value={item.from + \"/\" + item.to}\n              >\n                {\" \"}\n                {item.text}{\" \"}\n              </option>\n            ))}\n          </SelectBox>\n          <button\n            style={{ visibility: \"hidden\" }}\n            className=\"bg-white text-dark shadow-none btn btn-icon-handler border-primary\"\n          >\n            <MdOutlineLocationCity\n              style={{ marginTop: \"-7px\", marginLeft: \"-1px\" }}\n              size={18}\n            />\n          </button>\n        </div>\n        {windowWidth > 768 ? <MapViewButtonChangeGroup {...resourse} /> : <></>}\n        <div className=\"mx-1 col-12 mt-4 pt-0 view-changer-startup-card\">\n          <Card>\n            {/* <div className=\"select-type-card\"> */}\n            <h5 className=\"mb-3 text-bold font-Mont\">\n              {selectedArea.stateName.toUpperCase()} STARTUPS\n            </h5>\n            <div>\n              <SelectBoxLabel>Select Startup Type</SelectBoxLabel>\n              <SelectBox\n                colorTheme={colorTheme}\n                style={{\n                  backgroundImage: getThemeDropDownImage(),\n                }}\n                marginBottom=\"20px\"\n                value={selectedStartTypeIndex}\n                onChange={startTypeChange}\n              >\n                {startUpTypes.map((item: any, index: number) => (\n                  <option key={item.index} value={item.index}>\n                    {item.text}\n                  </option>\n                ))}\n              </SelectBox>\n            </div>\n            <Card\n              background={theme.bgCard4}\n              className=\"d-flex flex-row align-items-center px-3 py-3 my-0 mb-1 justify-content-center\"\n              style={{ height: \"60px\" }}\n              border={true}\n            >\n              {newCount > 0 ? (\n                <h4 className=\"p-0 m-0 text-center\">\n                  {leadingSector\n                    ? `(${leadingSector._id.name}) ${newCount}`\n                    : newCount}\n                </h4>\n              ) : (\n                <p className=\"text-muted m-0 p-0 font-500\">\n                  {\"Data Not Available.\"}\n                </p>\n              )}\n            </Card>\n            {selectedArea.id !== \"india\" && (\n              <>\n                <ViewMoreButton\n                  colorTheme={colorTheme}\n                  shadow={true}\n                  onClick={() => redirectToStatePolicy()}\n                  className={`btn btn-radius w-100 mt-4 ${\n                    stateViewMode || activeCard !== \"Startups\" ? \"mb-0\" : \"\"\n                  }`}\n                >\n                  {VIEW_STATE_STARTUP_POLICY}\n                </ViewMoreButton>\n                {!stateViewMode && activeCard === \"Startups\" && (\n                  <ViewMoreButton\n                    colorTheme={colorTheme}\n                    shadow={false}\n                    onClick={() => {\n                      setStateViewMode(true);\n                      fetchDistrict();\n                    }}\n                    className=\"btn background-color-theme btn-radius w-100 text-white mb-0\"\n                  >\n                    {VIEW_MORE + selectedArea.stateName}\n                  </ViewMoreButton>\n                )}\n              </>\n            )}\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ViewChangerComponent;\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nexport const Card = styled.div<any>`\npadding: 20px 16px 20px 16px;\nbackground: ${props=> props.background ? props.background : props.theme.bgCards} !important;\nbox-shadow: ${props=> props.theme.shadowCards} !important;\nborder-radius: 4px;\ncolor: ${props=> props.theme.colorCards} !important;\nborder: ${ props=> props.border && props.theme.showCaseStartUpBorder};\n@media (max-width:768px){\n    box-shadow: ${(props:any)=> props.noShadow ? '0px 0px black' : props.theme.shadowCards } !important;\n}\n`\n\nexport const CountCard = styled.div<any>`\n    background: ${props=> props.active ? \"#0177FA\" : props.theme.bgCards};\n    color: ${props=> props.active ? 'white' : props.theme.bgCards}\n`"],"sourceRoot":""}