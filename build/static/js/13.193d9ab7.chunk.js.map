{"version":3,"sources":["pages/HomePage/CountsBlockComponent.tsx"],"names":["i","override","css","CountCardWrapper","styled","div","props","active","ThemeColorIdentifier","colorTheme","theme","bgCards","borderColor","color","CountCard","activeCard","name","acc","state","handleCardClick","accessor","loading","useWindowSize","windowWidth","useState","currentCount","setCurrentCount","useContext","ThemeContext","useEffect","interval","count","slice","setInterval","prevState","Number","clearInterval","onClick","className","size","style","padding","alignItems","visibility","background","CountsBlockComponent","cancelToken","selectedArea","countResource","applyRoles","setStateViewMap","setActiveCard","startupType","history","useHistory","getCounts","countLoading","setPrimaryColorTheme","setSelectedArea","setSelectedStateByMap","tableState","selectedStateByMap","appliedFilters","startupCount","CountBlockModel","stateCounts","setStateCounts","query","useWebQuery","fetchCounts","cancel","axios","CancelToken","source","post","process","stateId","states","from","registrationFrom","to","registrationTo","roles","token","data","Object","keys","forEach","item","index","delayDebounceFn","setTimeout","clearTimeout","counts","value","toLowerCase","getThemeName","resources","id","get","stateSelected","stateName","push","React","memo"],"mappings":"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","file":"static/js/13.193d9ab7.chunk.js","sourcesContent":["import { css } from \"@emotion/react\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport styled from \"styled-components\";\nimport { CountBlockModel } from \".\";\nimport { ThemeContext } from \"../../config/context\";\nimport { ThemeColorIdentifier } from \"../../helper-function/themeColor\";\nimport { useWebQuery } from \"../../hooks/useWebQuery\";\nimport { useWindowSize } from \"../../hooks/useWindowSize\";\nimport \"../../scss/HomePageStyles/countBlockComponent.scss\";\nimport { H5 } from \"../../styles-components/Heading\";\nimport { IDType } from \"./Map/variables\";\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\ninterface CountBlockTypes {\n  selectedArea: IDType;\n  countResource: any;\n  applyRoles: any;\n  setStateViewMap: React.Dispatch<boolean>;\n  activeCard: string;\n  setActiveCard: any;\n  startupType: any;\n}\n\ninterface CountCardTypes {\n  name: string;\n  state: any;\n  acc?: string;\n  activeCard: string;\n  handleCardClick: any;\n  borderColor: string;\n  accessor?: string;\n  loading: boolean;\n  colorTheme: string;\n}\n\ninterface CountCardWrapperTypes {\n  active: boolean;\n  borderColor: string;\n  colorTheme: string;\n}\n\nconst CountCardWrapper = styled.div<CountCardWrapperTypes>`\n  border-radius: 4px;\n  height: 76px;\n  top: 43px;\n  background-color: ${(props: any) =>\n    props.active\n      ? ThemeColorIdentifier(props.colorTheme)\n      : props.theme.bgCards};\n  border: 2px solid ${(props: any) => props.borderColor};\n  color: ${(props: any) => (props.active ? \"white\" : props.theme.color)};\n  transition: 0.5s color;\n  @media (max-width: 768px) {\n    border: none;\n    background-color: ${(props: any) =>\n      props.active ? \"rgba(255,255,255,0)\" : \"rgba(255,255,255,0)\"} !important;\n    color: ${(props: any) =>\n      props.active ? props.theme.color : \"\"} !important;\n    height: 82px;\n    font-weight: ${(props: any) => (props.active ? \"600\" : \"500\")};\n  }\n`;\n\nconst CountCard = ({\n  activeCard,\n  name,\n  acc,\n  state,\n  borderColor,\n  handleCardClick,\n  accessor,\n  loading,\n  colorTheme,\n}: CountCardTypes) => {\n  const [windowWidth, windowHeight] = useWindowSize();\n  const [currentCount, setCurrentCount] = useState<number>(0);\n  const active = name === activeCard;\n  const theme = useContext(ThemeContext);\n  useEffect(() => {\n    const count = state[accessor ? accessor : name.slice(0, -1)];\n    if (count === 0) {\n      setCurrentCount(0);\n    }\n\n    if (count && count > currentCount) {\n      let interval: any;\n      if (currentCount < count) {\n        interval = setInterval(() => {\n          setCurrentCount((prevState) => {\n            if (prevState === Number(count) || prevState > Number(count)) {\n              return count;\n            }\n            if (count > 1000) {\n              return prevState + 1000;\n            }\n            if (count < 1000 && count > 500) {\n              return prevState + 200;\n            }\n            return prevState + 1;\n          });\n        }, 1);\n      } else if (currentCount === count) {\n        clearInterval(interval);\n      } else {\n      }\n      return () => clearInterval(interval);\n    } else if (count && count < currentCount) {\n      let interval: any;\n      if (currentCount > count) {\n        interval = setInterval(() => {\n          setCurrentCount((prevState) => {\n            if (prevState === Number(count) || prevState < Number(count)) {\n              return count;\n            }\n            if (currentCount - count > 10000) {\n              return prevState - 500;\n            }\n            if (currentCount - count > 5000) {\n              return prevState - 200;\n            }\n            if (currentCount - count > 1000) {\n              return prevState - 100;\n            }\n            return prevState - 1;\n          });\n        }, 1);\n      } else if (currentCount === count) {\n        clearInterval(interval);\n      } else {\n      }\n      return () => clearInterval(interval);\n    }\n  }, [state, loading]);\n\n  return (\n    <CountCardWrapper\n      colorTheme={colorTheme}\n      onClick={() => handleCardClick(name, acc)}\n      active={active}\n      borderColor={borderColor}\n      className={`col-md count-single-card p-0 w-100`}\n    >\n      {loading ? (\n        <div className=\"w-100 h-100 d-flex justify-content-center align-items-center\">\n          <MoonLoader\n            color={active ? \"white\" : ThemeColorIdentifier(colorTheme)}\n            loading={true}\n            size={\"25px\"}\n            css={override}\n          />\n        </div>\n      ) : (\n        <></>\n      )}\n      {!loading && (\n        <div\n          className=\" d-flex flex-column h-100 justify-content-between\"\n          style={{ padding: \"0.83rem\", alignItems: \"start\" }}\n        >\n          <h4\n            className=\"m-0 p-0 count-number\"\n            style={{\n              color: !active ? theme.color : \"\",\n              visibility: windowWidth > 768 || active ? \"visible\" : \"hidden\",\n            }}\n          >\n            {currentCount === 0 ? \"-\" : currentCount}\n          </h4>\n          <div>\n            <h6\n              style={{\n                color: !active\n                  ? theme.color\n                  : windowWidth < 768\n                  ? ThemeColorIdentifier(colorTheme)\n                  : \"\",\n              }}\n              className=\"mx-0 mb-0 p-0\"\n            >\n              {name}\n            </h6>\n            <div\n              className={`count-underline d-block d-sm-none`}\n              style={{\n                visibility: active ? \"visible\" : \"hidden\",\n                background: ThemeColorIdentifier(colorTheme),\n              }}\n            ></div>\n          </div>\n        </div>\n      )}\n    </CountCardWrapper>\n  );\n};\n\ninterface KeyValuePair {\n  id: string;\n  value: string;\n}\n\nconst CountsBlockComponent = ({\n  selectedArea,\n  countResource,\n  applyRoles,\n  setStateViewMap,\n  activeCard,\n  setActiveCard,\n  startupType,\n}: CountBlockTypes) => {\n  const theme = useContext(ThemeContext);\n  const history = useHistory();\n\n  const {\n    getCounts,\n    colorTheme,\n    // countState,\n    countLoading,\n    setPrimaryColorTheme,\n    setSelectedArea,\n    tableState,\n    selectedStateByMap,\n    setSelectedStateByMap,\n    appliedFilters,\n    startupCount,\n  } = countResource;\n  const [stateCounts, setStateCounts] = useState<any>(new CountBlockModel());\n\n  const BASE_URL = process.env.REACT_APP_BACKEND_ENDPOINT;\n  const query = useWebQuery();\n  let cancelToken: any;\n  const fetchCounts = async () => {\n    //Check if there are any previous pending requests\n    if (typeof cancelToken != typeof undefined) {\n      cancelToken.cancel(\"Operation canceled due to new request.\");\n    }\n\n    //Save the cancel token for the current request\n    cancelToken = axios.CancelToken.source();\n    try {\n      const { data } = await axios.post(\n        `${BASE_URL}/home/topNumbers`,\n        {\n          ...appliedFilters,\n          stateId: appliedFilters.states[0],\n          from: appliedFilters.registrationFrom,\n          to: appliedFilters.registrationTo,\n          roles: [\n            \"Startup\",\n            \"Mentor\",\n            \"Investor\",\n            \"GovernmentBody\",\n            \"Incubator\",\n            \"Accelerator\",\n          ],\n        },\n        { cancelToken: cancelToken.token }\n      );\n\n      const count: any = new CountBlockModel();\n\n      Object.keys(data).forEach((item: string) => {\n        if (startupType?.index !== \"0\" && item === \"Startup\") {\n          count[item] = startupCount;\n        } else {\n          count[item] = data[item];\n        }\n      });\n      setStateCounts(count);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(() => {\n      fetchCounts();\n    }, 100);\n    return () => {\n      clearTimeout(delayDebounceFn);\n    };\n  }, [appliedFilters, startupCount]);\n\n  useEffect(() => {\n    if (startupType?.index !== \"1\" && activeCard !== \"Startups\") {\n      handleCardClick(\"Startups\", \"Startup\");\n    }\n  }, [startupType]);\n\n  useEffect(() => {\n    const counts = { ...stateCounts };\n    counts[\"Startup\"] = startupCount;\n    setStateCounts(counts);\n  }, [startupCount]);\n\n  const getThemeName = (name: string) => {\n    const value = name.toLowerCase();\n    if (value === \"startups\") return \"theme-1\";\n    if (value === \"mentors\") return \"theme-3\";\n    if (value === \"incubators\") return \"theme-4\";\n    if (value === \"investors\") return \"theme-5\";\n    if (value === \"accelerators\") return \"theme-6\";\n    if (value === \"institutions\") return \"theme-7\";\n  };\n\n  const handleCardClick = (name: string, accessor: string) => {\n    applyRoles(accessor, name);\n    setActiveCard(name);\n    setPrimaryColorTheme(getThemeName(name));\n  };\n\n  const resources = {\n    activeCard,\n    handleCardClick,\n    state: stateCounts,\n    loading: countLoading,\n    colorTheme,\n  };\n\n  const id = query.get(\"state\");\n  const stateSelected = id !== \"india\" || id ? id : null;\n\n  return (\n    <div className=\"container-fluid count-block-styles px-0 mx-0\">\n      <div className=\"row mx-0 px-0\">\n        <div className=\"d-flex mt-3 px-0 align-items-baseline\">\n          {/* <H5>{selectedArea.stateName}</H5> */}\n          <H5\n            active={stateSelected}\n            colorTheme={colorTheme}\n            onClick={() => {\n              if (!stateSelected) return;\n              setSelectedArea({ id: \"india\", stateName: \"India\" });\n              setSelectedStateByMap({\n                id: \"\",\n                name: \"\",\n              });\n              setStateViewMap(false);\n              history.push(\"/maps/\");\n            }}\n            className={`mb-3 ${stateSelected ? \"text-theme\" : \"\"}`}\n          >\n            India\n          </H5>\n          {stateSelected && selectedArea.stateName != \"India\" ? (\n            <>\n              <div className=\"d-flex ms-2 align-items-center\">\n                <p style={{ color: theme.color }} className=\"m-0 p-0 font-12px\">\n                  {\">\"}\n                </p>\n                <p\n                  style={{ color: theme.color }}\n                  className=\"p-0 m-0 state-label ms-2\"\n                >\n                  {selectedArea.stateName}\n                </p>\n              </div>\n            </>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n      <div className=\"d-inline-flex count-div horizontal-scroll\">\n        <CountCard\n          {...resources}\n          borderColor=\"#0177FA\"\n          accessor=\"Startup\"\n          name=\"Startups\"\n          acc={\"Startup\"}\n        />\n        <CountCard\n          {...resources}\n          borderColor=\"#ED8E00\"\n          accessor=\"Mentor\"\n          acc={\"Mentor\"}\n          name=\"Mentors\"\n        />\n        <CountCard\n          {...resources}\n          borderColor=\"#7838e0\"\n          name=\"Incubators\"\n          acc=\"Incubator\"\n        />\n        <CountCard\n          {...resources}\n          borderColor=\"#BDAA00\"\n          name=\"Investors\"\n          acc=\"Investor\"\n        />\n        <CountCard\n          {...resources}\n          borderColor=\"#CB3535\"\n          name=\"Accelerators\"\n          acc=\"Accelerator\"\n        />\n        <CountCard\n          {...resources}\n          borderColor=\"#00AD11\"\n          accessor=\"GovernmentBody\"\n          acc=\"GovernmentBody\"\n          name=\"Institutions\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(CountsBlockComponent);\n"],"sourceRoot":""}