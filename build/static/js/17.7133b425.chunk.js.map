{"version":3,"sources":["pages/HomePage/LeftNav/MobileFilter.tsx"],"names":["MobileView","props","anchor","React","top","left","bottom","right","state","setState","toggleDrawer","open","event","type","key","trimDateRangeData","array","length","newList","Array","forEach","item","push","id","from","to","value","text","fetchDateRange","isVisible","onClose","handleToggle","className","sx","width","role","onClick","onKeyDown","filterProps","dateRangeState","reverse","dateRangeLoading","insight","search","downIconAlignment","dateRange","noShadow"],"mappings":"sOAgBe,SAASA,EAAWC,GACjC,IA+BcC,EA/Bd,EAA0BC,WAAe,CACvCC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,IACP,mBALKC,EAAK,KAAEC,EAAQ,KAOhBC,EACJ,SAACR,EAAgBS,GAAa,OAC9B,SAACC,IAEkB,YAAfA,EAAMC,MACkC,QAAtCD,EAA8BE,KACS,UAAtCF,EAA8BE,MAKnCL,EAAS,2BAAKD,GAAK,kBAAGN,EAASS,IACjC,CAAE,EAEII,EAAoB,SAACC,GACzB,GAAGA,GAASA,EAAMC,OAAO,CACvB,IAAMC,EAAU,IAAIC,MAIpB,OAHAH,EAAMI,SAAQ,SAACC,GACbH,EAAQI,KAAK,CAAEC,GAAIF,EAAKG,KAAO,IAAMH,EAAKI,GAAIC,MAAOL,EAAKM,MAC5D,IACOT,CACT,CAAO,MAAO,EAChB,EA2BF,OAJAf,aAAgB,WACdF,EAAM2B,gBACR,GAAG,IAGD,8BACE,cAAC,WAAc,UACb,eAAC,IAAM,CACL1B,OAAQ,SACRS,KAAMV,EAAM4B,UACZC,QAAS,kBAAM7B,EAAM8B,cAAc,EAAC,UAGpC,mBAAGC,UAAU,8CAA6C,sBAlCpD9B,EAmCA,SAlCZ,cAAC,IAAG,CACF+B,GAAI,CAAEC,MAAkB,WAAXhC,EAAsB,OAAS,KAC5CiC,KAAK,eACLC,QAAS1B,EAAaR,GAAQ,GAC9BmC,UAAW3B,EAAaR,GAAQ,GAAO,SAEvC,cAAC,UAAO,2BACFD,EAAMqC,aAAW,IACrBC,eAAgBxB,EAAkBd,EAAMsC,gBAAgBC,UACxDC,iBAAkBxC,EAAMwC,iBACxBC,SAAS,EACTC,QAAQ,EACRC,mBAAiB,EACjBC,WAAW,EACXC,UAAU,EACVf,aAAc9B,EAAM8B,yBAwB5B,C","file":"static/js/17.7133b425.chunk.js","sourcesContent":["import Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport * as React from \"react\";\nimport LeftNav from \"./LeftNavComponent\";\n\ninterface MobileViewProps {\n  filterProps: any;\n  handleToggle: any;\n  isVisible: boolean;\n  fetchDateRange: any;\n  dateRangeState: any[];\n  dateRangeLoading: boolean;\n}\n\ntype Anchor = \"bottom\";\n\nexport default function MobileView(props: MobileViewProps) {\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: true,\n    right: false,\n  });\n\n  const toggleDrawer =\n    (anchor: Anchor, open: boolean) =>\n    (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event.type === \"keydown\" &&\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\n          (event as React.KeyboardEvent).key === \"Shift\")\n      ) {\n        return;\n      }\n\n      setState({ ...state, [anchor]: open });\n    };\n\n    const trimDateRangeData = (array:any[]) =>{\n      if(array && array.length){\n        const newList = new Array();\n        array.forEach((item)=>{\n          newList.push({ id: item.from + '/' + item.to, value: item.text })\n        })\n        return newList\n      } else return []\n    }\n\n  const list = (anchor: Anchor) => (\n    <Box\n      sx={{ width: anchor === \"bottom\" ? \"auto\" : 250 }}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <LeftNav\n        {...props.filterProps}\n        dateRangeState={trimDateRangeData(props.dateRangeState).reverse()}\n        dateRangeLoading={props.dateRangeLoading}\n        insight={false}\n        search={false}\n        downIconAlignment\n        dateRange={true}\n        noShadow={true}\n        handleToggle={props.handleToggle}\n      />\n    </Box>\n  );\n\n  React.useEffect(() => {\n    props.fetchDateRange();\n  }, []);\n\n  return (\n    <div>\n      <React.Fragment>\n        <Drawer\n          anchor={\"bottom\"}\n          open={props.isVisible}\n          onClose={() => props.handleToggle()}\n        >\n          {/* <div style={{ position: 'absolute', top: 40, width: '100px', height: '50px', background: 'red' }}></div> */}\n          <p className=\"font-Mont font-16px font-600 pt-4 ps-3 mb-0\">FILTERS</p>\n          {list(\"bottom\")}\n        </Drawer>\n      </React.Fragment>\n    </div>\n  );\n}\n"],"sourceRoot":""}